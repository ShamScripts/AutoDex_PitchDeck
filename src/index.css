@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* CarMon Scheme (replacing previous colors) */
    --void: 0 36% 7%;           /* #1A0B0B – deep oxblood background */
    --ink: 20 45% 66%;          /* #CE9B83 – warm sandstone foreground */

    --background: var(--void);
    --foreground: var(--ink);

    /* Map the remaining three to existing roles */
    --neon-red: 2 65% 22%;      /* #5D1613 – deep brick (primary) */
    --strawberry: 93 9% 50%;    /* #7D8974 – urban sage (secondary) */
    --neon-green: 220 12% 48%;  /* #6D7686 – steel slate (accent) */
    --legendary-gold: 20 45% 66%; /* reuse sandstone for “legendary” warmth */

    --primary: var(--neon-red);
    --primary-foreground: var(--void);

    --secondary: var(--strawberry);
    --secondary-foreground: var(--ink);

    --accent: var(--neon-green);
    --accent-foreground: var(--void);

    /* Neutrals derived from the new background */
    --muted: 0 25% 12%;
    --muted-foreground: 20 20% 72%;

    --card: 0 30% 8%;
    --card-foreground: var(--ink);

    --border: 0 25% 14%;
    --input: 0 25% 12%;
    --ring: var(--neon-red);

    --destructive: 2 65% 22%;
    --destructive-foreground: var(--ink);

    --popover: var(--card);
    --popover-foreground: var(--ink);

    --radius: 0.75rem;

    /* Gradients (now use the new mapped hues) */
    --gradient-neon: linear-gradient(135deg, hsl(var(--neon-red)), hsl(var(--strawberry)));
    --gradient-legendary: linear-gradient(135deg, hsl(var(--legendary-gold)), hsl(20 55% 72%));
    --gradient-glass: linear-gradient(135deg, hsla(var(--ink), 0.06), hsla(var(--ink), 0.02));

    /* Shadows updated to new hues */
    --shadow-neon-red: 0 0 20px hsla(var(--neon-red), 0.4);
    --shadow-strawberry: 0 0 20px hsla(var(--strawberry), 0.4);
    --shadow-neon-green: 0 0 20px hsla(var(--neon-green), 0.4);
    --shadow-legendary: 0 0 30px hsla(var(--legendary-gold), 0.5);
    --shadow-glass: 0 8px 32px rgba(0, 0, 0, 0.4);

    /* Transitions */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground antialiased;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;

    /* Explicit background + text fallback */
    background-color: hsl(var(--void));       /* #1A0B0B */
    color: hsl(var(--ink));                  /* #CE9B83 */
  }
  
  h1, h2, h3, h4, h5, h6 {
    font-family: 'Russo One', 'Orbitron', sans-serif;
    font-weight: 400;
    color: hsl(var(--sandstone)); /* Optional highlight for headings */
  }
  
  .font-mono {
    font-family: 'JetBrains Mono', 'Courier New', monospace;
    color: hsl(var(--steel-slate)); /* Muted code text color */
  }
}

@layer components {
  /* Glass Card Effect */
  .glass-card {
    background: var(--gradient-glass);
    backdrop-filter: blur(10px);
    border: 1px solid hsla(var(--ink), 0.12);
    box-shadow: var(--shadow-glass);
    transition: var(--transition-smooth);
  }

  .glass-card:hover {
    border-color: hsla(var(--neon-red), 0.3);   /* primary (deep-brick) glow */
    box-shadow: var(--shadow-neon-red);
    transform: translateY(-4px);
  }

  /* === Glow Utilities (semantic) === */
  .glow-primary   { box-shadow: var(--shadow-neon-red); }       /* deep-brick */
  .glow-secondary { box-shadow: var(--shadow-strawberry); }     /* urban-sage */
  .glow-accent    { box-shadow: var(--shadow-neon-green); }     /* steel-slate */
  .glow-legendary { box-shadow: var(--shadow-legendary); }      /* sandstone */

  /* Back-compat aliases */
  .glow-blue    { box-shadow: var(--shadow-neon-red); }
  .glow-purple  { box-shadow: var(--shadow-strawberry); }
  .glow-green   { box-shadow: var(--shadow-neon-green); }

  /* Animated Aura Ring */
  .aura-ring { position: relative; }
  .aura-ring::before {
    content: '';
    position: absolute;
    inset: -4px;
    border-radius: inherit;
    padding: 2px;
    background: var(--gradient-neon); /* primary->secondary gradient */
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.3s ease;
    animation: pulse-glow 3s ease-in-out infinite;
  }
  .aura-ring:hover::before { opacity: 1; }

  /* Grid uses primary hue */
  .neon-grid {
    background-image:
      linear-gradient(hsla(var(--neon-red), 0.10) 1px, transparent 1px),
      linear-gradient(90deg, hsla(var(--neon-red), 0.10) 1px, transparent 1px);
    background-size: 50px 50px;
    background-position: center center;
  }

  /* === Text Glows mapped to new roles === */
  .neon-text {
    text-shadow:
      0 0 10px hsla(var(--neon-red), 0.8),
      0 0 20px hsla(var(--neon-red), 0.6),
      0 0 30px hsla(var(--neon-red), 0.4);
  }
  .neon-text-purple { /* secondary */
    text-shadow:
      0 0 10px hsla(var(--strawberry), 0.8),
      0 0 20px hsla(var(--strawberry), 0.6),
      0 0 30px hsla(var(--strawberry), 0.4);
  }
  .neon-text-green {  /* accent */
    text-shadow:
      0 0 10px hsla(var(--neon-green), 0.8),
      0 0 20px hsla(var(--neon-green), 0.6),
      0 0 30px hsla(var(--neon-green), 0.4);
  }
  .neon-text-legendary { /* sandstone highlight */
    text-shadow:
      0 0 10px hsla(var(--legendary-gold), 0.8),
      0 0 20px hsla(var(--legendary-gold), 0.6),
      0 0 30px hsla(var(--legendary-gold), 0.4);
  }
}

@layer utilities {
  /* Animation Keyframes */
  @keyframes pulse-glow {
    0%, 100% {
      opacity: 0.6;
      transform: scale(1);
    }
    50% {
      opacity: 1;
      transform: scale(1.02);
    }
  }
  
  @keyframes flicker {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.8; }
  }
  
  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
  }
  
  @keyframes shimmer {
    0% { background-position: -1000px 0; }
    100% { background-position: 1000px 0; }
  }
  
  .animate-pulse-glow {
    animation: pulse-glow 3s ease-in-out infinite;
  }
  
  .animate-flicker {
    animation: flicker 2s ease-in-out infinite;
  }
  
  .animate-float {
    animation: float 3s ease-in-out infinite;
  }
}
